name: CI/CD for Multiple Services - Staging

on:
  push:
    branches:
      - staging

jobs:
  build-and-push:
    environment: staging
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - news

    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v3

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build and push Docker image for each service
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}-garuda:v1.0

  deploy:
    environment: staging
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # Stop and remove existing containers
            sudo docker-compose -f /var/www/garuda/docker-compose.yml down || true
            
            # Pull the latest Docker images
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/auth-garuda:v1.0
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/data-garuda:v1.0
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/news-garuda:v1.0

            # Start services using docker-compose
            sudo docker-compose -f /var/www/garuda/docker-compose.yml up -d